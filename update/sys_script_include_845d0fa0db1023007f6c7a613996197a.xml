<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_267499_carrental.getTest</api_name>
        <client_callable>true</client_callable>
        <description>test funktion, sollte "Hello World" zur√ºck geben </description>
        <name>getTest</name>
        <script><![CDATA[var getTest = Class.create();
getTest.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	gettest:function(){
			//test
			var ausgabe;
			try{
				var rqAnfang = this.getParameter('anfang');
				var rqEnde = this.getParameter('ende');
				 ausgabe= getCars(rqAnfang,rqEnde);
			} catch(err){
				return err;
			}
			//return this._getCars(datumAnfang,datumEnde)+'/ende';
			//return datumAnfang+"/"+datumEnde;
			return ausgabe;

			function getCars(rqAnfang,rqEnde){
			var gr = new GlideRecord('x_267499_carrental_bookings');
			gr.addQuery('status','1');
			gr.query();
			var back="";
			var temp =[];
			while(gr.next()){
				if(checkIfIsInUse(rqAnfang,rqEnde,gr.booking_from,gr.booking_until)){
					temp.push(gr.auto.sys_id);
				}

			}
			var temp2 = getAvailableCars(temp);
			for(var i=0;i<temp2.length;i++){
				back+=temp2[i]+"/";
			}
			return back;
		}


			function checkIfIsInUse(rqAnfang,rqEnde,datumBuchungAnfang,datumBuchungEnde){
			if((datumBuchungAnfang<=rqAnfang && datumBuchungEnde>=rqAnfang) || (datumBuchungAnfang<=rqEnde && datumBuchungAnfang>=rqAnfang)){
				return true;
			}
			else {
				return false;
			}
		}
		function getAvailableCars(notAvailable){
			//var returnValue=[];
			var gr = new GlideRecord('x_267499_carrental_cars');
			gr.query();
			var cars =[];
			
			while(gr.next()){
				if(includes(notAvailable,gr.sys_id)){
					cars.push(gr.sys_id+'-'+gr.brand+' '+gr.model);
				}
			}
			return cars;
		}
		function includes(array, value){
			for(var i=0;i<array.length;i++){
				if(array[i]==value){
					return false;
				}
				/*if(array.indexOf(value)===-1){
					return false;
				}*/
			}
			return true;
			
		}

	},
	
	/*_getCars:function(datumAnfang,datumEnde){
		var gr = new GlideRecord('x_267499_carrental_bookings');
		gr.addQuery('status','1');
		gr.query();
		var back="";
		var temp =[];
		while(gr.next()){
			if(this._checkIfIsInUse(datumAnfang,datumEnde,gr.booking_from,gr.booking_until)){
				temp.push(gr.auto.sys_id);
			}
			
		}
		var temp2 = this._getAvailableCars(temp);
		for(var i=0;i<temp2.length;i++){
			back+=temp2[i]+"/";
		}
		return back;
	},
	_checkIfIsInUse:function(datumAnfang,datumEnde,datumBuchungAnfang,datumBuchungEnde){
		if((datumBuchungAnfang<=datumAnfang && datumBuchungEnde>=datumAnfang) || (datumBuchungAnfang<=datumEnde && datumBuchungAnfang>=datumAnfang)){
			return true;
		}
		else {
			return false;
		}
	},
	_getAvailableCars:function(notAvailable){
		var returnValue=[];
		var gr = new GlideRecord('x_267499_carrental_cars');
		gr.query();
		var cars =[];
		while(gr.next()){
			cars.push(gr.sys_id);
		}
		for(var i = 0; i<cars.length;i++){
			if(!notAvailable.includes(cars[i])){
				returnValue.push(cars[i]);
			}
		}
		return returnValue;
	},*/
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-08-30 09:12:39</sys_created_on>
        <sys_id>845d0fa0db1023007f6c7a613996197a</sys_id>
        <sys_mod_count>78</sys_mod_count>
        <sys_name>getTest</sys_name>
        <sys_package display_value="carRental" source="x_267499_carrental">32586f6bdb0023007f6c7a613996192c</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="carRental">32586f6bdb0023007f6c7a613996192c</sys_scope>
        <sys_update_name>sys_script_include_845d0fa0db1023007f6c7a613996197a</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-09-03 13:17:22</sys_updated_on>
    </sys_script_include>
</record_update>
